[{"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Map.jsx":"1","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\App.jsx":"2","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Post.jsx":"3","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\reportWebVitals.js":"4","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Grid.jsx":"5","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\EditDelete.jsx":"6","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Filter.jsx":"7","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\index.js":"8","C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\mapStyles.js":"9"},{"size":6133,"mtime":1609240608786,"results":"10","hashOfConfig":"11"},{"size":2217,"mtime":1607947807567,"results":"12","hashOfConfig":"11"},{"size":6544,"mtime":1607948810255,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1607315346516,"results":"14","hashOfConfig":"11"},{"size":664,"mtime":1607840600543,"results":"15","hashOfConfig":"11"},{"size":6612,"mtime":1607947216352,"results":"16","hashOfConfig":"11"},{"size":3591,"mtime":1608110017353,"results":"17","hashOfConfig":"11"},{"size":507,"mtime":1607832892126,"results":"18","hashOfConfig":"11"},{"size":1101,"mtime":1607585330783,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13pbwei",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Map.jsx",["41","42","43","44"],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\App.jsx",[],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Post.jsx",["45"],"import React, { useCallback, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport countryRegions from \"../countryRegion.json\";\r\n\r\nexport default function Post({\r\n  setClickedPlace,\r\n  clickedPlace,\r\n  isPostModal,\r\n  setIsPostModal,\r\n}) {\r\n  const [imagePath, setImagePath] = useState();\r\n  const [owner, setOwner] = useState();\r\n  const [hunter, setHunter] = useState();\r\n  const [comment, setComment] = useState();\r\n  const [favorite, setFavorite] = useState(false);\r\n  const [handmade, setHandmade] = useState(false);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    try {\r\n      const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/upload`;\r\n      acceptedFiles.forEach(async (acceptedFile) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", acceptedFile);\r\n        formData.append(\"folder\", \"magnets\");\r\n        formData.append(\r\n          \"upload_preset\",\r\n          process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET\r\n        );\r\n        const response = await axios.post(url, formData);\r\n        if (response.status === 200) {\r\n          alert(\"Upload completed!\");\r\n          setImagePath(response.data.public_id);\r\n        } else {\r\n          alert(\"Upload failed\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Error at cloudinary upload\", err);\r\n    }\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accepts: \"images/*\",\r\n    multiple: false,\r\n  });\r\n\r\n  const submitPostData = useCallback(async () => {\r\n    try {\r\n      const getRes = await axios.get(\r\n        \"https://maps.googleapis.com/maps/api/geocode/json\",\r\n        {\r\n          params: {\r\n            language: \"en\",\r\n            latlng: `${clickedPlace.lat},${clickedPlace.lng}`,\r\n            key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n          },\r\n        }\r\n      );\r\n      let locality;\r\n      let country;\r\n      let area;\r\n      for (let result of getRes.data.results) {\r\n        if (\r\n          !locality &&\r\n          (result.types[0] === \"locality\" ||\r\n            result.types[0] === \"postal_town\" ||\r\n            result.types[0] === \"administrative_area_level_4\" ||\r\n            result.types[0] === \"administrative_area_level_3\" ||\r\n            result.types[0] === \"administrative_area_level_2\" ||\r\n            result.types[0] === \"administrative_area_level_1\")\r\n        )\r\n          locality = result.address_components[0].long_name;\r\n        if (!country && result.types[0] === \"country\")\r\n          country = result.address_components[0].long_name;\r\n      }\r\n      const matchedCountryRegion = countryRegions.find(\r\n        (countryRegion) => countryRegion.country === country\r\n      );\r\n      if (matchedCountryRegion) area = matchedCountryRegion.location;\r\n\r\n      const body = {\r\n        image_path: imagePath,\r\n        lat: clickedPlace.lat,\r\n        lng: clickedPlace.lng,\r\n        owner: owner,\r\n        hunter: hunter,\r\n        comment: comment,\r\n        city: locality,\r\n        country: country,\r\n        area: area,\r\n        favorite: favorite,\r\n        handmade: handmade,\r\n      };\r\n      const postRes = await axios.post(\"/api/magnet\", body);\r\n      if (postRes.status === 200) window.location.reload();\r\n    } catch (err) {\r\n      console.log(\"Error at axios.post\", err);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"modal-wrapper\">\r\n      <Modal\r\n        isOpen={isPostModal}\r\n        onRequestClose={() => setIsPostModal(false)}\r\n        overlayClassName={{\r\n          base: \"overlay-base\",\r\n          afterOpen: \"overlay-after\",\r\n          beforeClose: \"overlay-before\",\r\n        }}\r\n        className={{\r\n          base: \"content-base\",\r\n          afterOpen: \"content-after\",\r\n          beforeClose: \"content-before\",\r\n        }}\r\n        closeTimeoutMS={200}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h2 className=\"modal-title\">Add Magnet</h2>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div\r\n            {...getRootProps()}\r\n            className={`dropzone ${isDragActive ? \"active\" : null}`}\r\n          >\r\n            <input {...getInputProps()}></input>\r\n            Drop photo here\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal-input\"\r\n            placeholder=\"Owner\"\r\n            onChange={(e) => {\r\n              setOwner(e.target.value);\r\n            }}\r\n          ></input>\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal-input\"\r\n            placeholder=\"Hunter\"\r\n            onChange={(e) => {\r\n              setHunter(e.target.value);\r\n            }}\r\n          ></input>\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal-input modal-comment\"\r\n            placeholder=\"Comment\"\r\n            onChange={(e) => {\r\n              setComment(e.target.value);\r\n            }}\r\n          ></input>\r\n          <div className=\"modal-input\">\r\n            <label className=\"check-label\" htmlFor=\"post-check-favorite\">\r\n              Favorite\r\n            </label>\r\n            <input\r\n              id=\"post-check-favorite\"\r\n              type=\"checkbox\"\r\n              className=\"checkbox\"\r\n              onChange={() => {\r\n                setFavorite(!favorite);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"modal-input\">\r\n            <label className=\"check-label\" htmlFor=\"post-check-handmade\">\r\n              Handmade\r\n            </label>\r\n            <input\r\n              id=\"post-check-handmade\"\r\n              type=\"checkbox\"\r\n              className=\"checkbox\"\r\n              onChange={() => {\r\n                setHandmade(!handmade);\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            className=\"submit-button green modal-button\"\r\n            onClick={() => {\r\n              if (owner && hunter && comment) {\r\n                submitPostData();\r\n              } else {\r\n                alert(\"Input all the information!\");\r\n              }\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n          <button\r\n            className=\"submit-button grey modal-button\"\r\n            onClick={() => {\r\n              setIsPostModal(false);\r\n              setClickedPlace(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n",["46","47"],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\reportWebVitals.js",[],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Grid.jsx",[],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\EditDelete.jsx",["48","49"],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\Filter.jsx",[],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\index.js",[],["50","51"],"C:\\Users\\bayez\\cc16\\cc16-project.solo-webapp-mvp\\src\\components\\mapStyles.js",["52"],{"ruleId":"53","severity":1,"message":"54","line":63,"column":6,"nodeType":"55","endLine":63,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":68,"column":6,"nodeType":"55","endLine":68,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":78,"column":25,"nodeType":"61","messageId":"62","endLine":78,"endColumn":27},{"ruleId":"53","severity":1,"message":"63","line":86,"column":6,"nodeType":"55","endLine":86,"endColumn":8,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":50,"column":26,"nodeType":"66","endLine":50,"endColumn":37},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"53","severity":1,"message":"65","line":28,"column":26,"nodeType":"66","endLine":28,"endColumn":37},{"ruleId":"53","severity":1,"message":"65","line":47,"column":24,"nodeType":"66","endLine":47,"endColumn":35},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":1,"nodeType":"75","endLine":71,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'setClickedPlace' and 'setSelectedMarker'. Either include them or remove the dependency array. If 'setClickedPlace' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["76"],"React Hook useCallback has missing dependencies: 'setClickedPlace' and 'setSelectedMarker'. Either include them or remove the dependency array. If 'setSelectedMarker' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has missing dependencies: 'mapRef', 'setAreas', 'setCities', 'setCountires', and 'setMarkers'. Either include them or remove the dependency array. If 'setMarkers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["78"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},{"desc":"84","fix":"85"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setClickedPlace, setSelectedMarker]",{"range":"86","text":"87"},{"range":"88","text":"87"},"Update the dependencies array to be: [mapRef, setAreas, setCities, setCountires, setMarkers]",{"range":"89","text":"90"},[1295,1297],"[setClickedPlace, setSelectedMarker]",[1419,1421],[1958,1960],"[mapRef, setAreas, setCities, setCountires, setMarkers]"]